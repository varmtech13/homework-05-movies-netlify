{"version":3,"file":"static/js/reviews.e4c7bee5.chunk.js","mappings":"0RAGaA,EAAU,OACVC,EAAU,OAEVC,EAAgBC,EAAAA,GAAAA,EAAH,4JASbC,EAAOD,EAAAA,GAAAA,GAAH,sKAbI,EAceH,GAOvBK,EAAQF,EAAAA,GAAAA,GAAH,sGAMLG,EAAWH,EAAAA,GAAAA,OAAH,kLASRI,EAAaJ,EAAAA,GAAAA,GAAH,+FAIdH,GAGIQ,EAAcL,EAAAA,GAAAA,IAAH,+JAGfF,GAMIQ,EAAQN,EAAAA,GAAAA,IAAH,wFAMLO,EAAaP,EAAAA,GAAAA,IAAH,kLAEdF,GAQIU,EAASR,EAAAA,GAAAA,EAAH,+HACLF,GAMDW,EAAOT,EAAAA,GAAAA,EAAH,sB,SC1DjB,SAASU,EAAT,GAA8B,IAAZC,EAAW,EAAXA,QAChB,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAqB,SAAAC,GAAO,OAAIA,EAAQC,MAAM,EAAG,KAAO,MAA5B,EAElC,OACE,8BACGN,EAAQO,OAAS,EAChBP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQJ,EAAX,EAAWA,QAASK,EAApB,EAAoBA,GAAIC,EAAxB,EAAwBA,WAAYC,EAApC,EAAoCA,eAApC,OACV,UAACtB,EAAD,YACE,UAACI,EAAD,YACE,SAACC,EAAD,CACEkB,KAAKC,EAAAA,EAAAA,GAAgBF,EAAeG,aACpCC,IAAKJ,EAAeK,KACpBC,MAAM,KACNC,OAAO,KACPC,QAAS,SAAAC,GAAC,OAAKA,EAAEC,cAAcT,IAAMU,CAA3B,KAEZ,SAAChC,EAAD,UAAQkB,QAEV,UAACb,EAAD,WACGgB,EAAeY,QACd,UAAC3B,EAAD,YACE,SAAC,MAAD,IACCe,EAAeY,UAEhB,MACJ,SAAC,EAAD,UAAOb,EAAWL,MAAM,EAAG,UAE7B,SAAClB,EAAD,UACIc,EAAyCG,EAA9BD,EAAmBC,MAElC,SAACb,EAAD,CAAUiC,QAAS,kBAAMtB,GAAaD,EAAnB,EAA8B,UAASQ,EAA1D,SACGR,EAAW,YAAc,gBAxBnBQ,EADD,KA8BZ,uCAIP,CAEc,SAASgB,EAAT,GAA+B,IAAZC,EAAW,EAAXA,QAChC,GAA8B1B,EAAAA,EAAAA,UAAS,IAAvC,eAAOD,EAAP,KAAgB4B,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,KAAKH,EACjC,GAAE,CAACD,KAGF,SAAClC,EAAD,WACE,SAACM,EAAD,CAAQC,QAASA,KAGtB,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const COUNT = 4;\nexport const GAP_MAX = '24px';\nexport const GAP_MIN = '10px';\n\nexport const ReviewContent = styled.p`\n  font-size: 14px;\n  max-width: 1024px;\n  font-style: italic;\n  overflow: hidden;\n  margin-bottom: 32px;\n  max-height: 130px;\n`;\n\nexport const Item = styled.li`\n  width: calc((100% / ${COUNT}) - ${GAP_MAX});\n  box-shadow: 3px 2px 10px 2px #b5b5b5;\n  padding: 20px;\n  text-overflow: hidden;\n  min-height: 375px;\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 15px;\n  font-style: italic;\n  text-transform: capitalize;\n`;\n\nexport const ShowMore = styled.button`\n  text-transform: uppercase;\n  color: #be0000;\n  background-color: transparent;\n  border-color: transparent;\n  font-weight: 700;\n  font-size: 16px;\n`;\n\nexport const ReviewList = styled.ul`\n  margin-top: 48px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${GAP_MAX};\n`;\n\nexport const ReviewTitle = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${GAP_MIN};\n  border-bottom: 3px solid #be0000;\n  padding: 20px 0;\n  margin-bottom: 20px;\n`;\n\nexport const Image = styled.img`\n  border-radius: 50%;\n  max-width: 48px;\n  max-height: 48px;\n`;\n\nexport const ReviewDate = styled.div`\n  display: flex;\n  gap: ${GAP_MIN};\n  align-items: center;\n  justify-content: space-between;\n  font-size: 12px;\n  margin-bottom: 16px;\n  font-weight: 700;\n`;\n\nexport const Rating = styled.p`\n  gap: calc(${GAP_MIN} / 2);\n  display: flex;\n  color: #be0000;\n  font-size: 16px;\n  align-items: center;\n`;\nexport const Date = styled.p``;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from '../../services/tmdb-api';\nimport { makeAvavtarPath } from '../../services/makeImagePath';\nimport fallBackSrc from '../../images/avatar.png';\nimport { FcRating } from 'react-icons/fc';\nimport PropTypes from 'prop-types';\nimport {\n  Title,\n  ShowMore,\n  Item,\n  ReviewContent,\n  ReviewList,\n  ReviewTitle,\n  Image,\n  ReviewDate,\n  Rating,\n  Date,\n} from './Reviews.styled';\n\nfunction Review({ reviews }) {\n  const [showMore, setShowMore] = useState(false);\n  const changeReviewLength = content => content.slice(0, 300) + ' ...';\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        reviews.map(({ author, content, id, created_at, author_details }) => (\n          <Item key={id}>\n            <ReviewTitle>\n              <Image\n                src={makeAvavtarPath(author_details.avatar_path)}\n                alt={author_details.name}\n                width=\"48\"\n                height=\"48\"\n                onError={e => (e.currentTarget.src = fallBackSrc)}\n              />\n              <Title>{author}</Title>\n            </ReviewTitle>\n            <ReviewDate>\n              {author_details.rating ? (\n                <Rating>\n                  <FcRating />\n                  {author_details.rating}\n                </Rating>\n              ) : null}\n              <Date>{created_at.slice(0, 10)}</Date>\n            </ReviewDate>\n            <ReviewContent>\n              {!showMore ? changeReviewLength(content) : content}\n            </ReviewContent>\n            <ShowMore onClick={() => setShowMore(!showMore)} data-id={id}>\n              {showMore ? 'less more' : 'show more'}\n            </ShowMore>\n          </Item>\n        ))\n      ) : (\n        <p>No reviews</p>\n      )}\n    </>\n  );\n}\n\nexport default function Reviews({ movieId }) {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <ReviewList>\n      <Review reviews={reviews} />\n    </ReviewList>\n  );\n}\nReviews.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["GAP_MAX","GAP_MIN","ReviewContent","styled","Item","Title","ShowMore","ReviewList","ReviewTitle","Image","ReviewDate","Rating","Date","Review","reviews","useState","showMore","setShowMore","changeReviewLength","content","slice","length","map","author","id","created_at","author_details","src","makeAvavtarPath","avatar_path","alt","name","width","height","onError","e","currentTarget","fallBackSrc","rating","onClick","Reviews","movieId","setReviews","useEffect","fetchMovieReviews","then"],"sourceRoot":""}